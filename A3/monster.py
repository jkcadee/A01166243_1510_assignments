import random


def generate_consonant():
    """Generates a consonant.
    Return a list of one character selected randomly from the string of consonants

    :postcondition: Return a list of one character selected randomly from the string.
    :return: A list with a single character. """
    consonant = "BCDFGHJKLMNPQRSTVWXYZ"
    return random.sample(consonant, 1)


def generate_vowel():
    """Generates a vowel.
    Return a list of one character randomly selected from the string of vowels.

    :postcondition: Return a list of one character selected randomly from the string.
    :return: A list with a single character.
    """
    vowel = "AEIOUY"
    return random.sample(vowel, 1)


def generate_syllable():
    """Generates a syllable using a consonant and a vowel.
    Return a list with two characters, one generated by generate_consonant and the other by generate_vowel.

    :postcondition: Create a list of two characters, generated by the helper functions.
    :return: A list with two characters.
    """
    syllable = generate_consonant() + generate_vowel()
    return syllable


def random_name(name_length: int) -> str:
    """Return a string created by calling generate_syllable the amount of times syllables is called.

    :param name_length: A positive integer.
    :precondition: Syllables must be a positive integer and over zero.
    :postcondition: Creating a string with however many syllables as specified by the parameter.
    :return: A string with however many syllables as specified by the parameter."""
    syllable = ''
    for x in range(1, name_length + 1):
        name = ''.join(generate_syllable())
        syllable += name
    return syllable.capitalize()


def opp_character():
    """
    Return a dictionary with a character's name and stats, alongside other values. The values are all randomized.

    :postcondition: Name must be generated.
    :postcondition: Generates name and inserts in dictionary.
    :return: A dictionary with the character's name and stats.
    """
    the_character = {'Name:': random_name(random.randint(1, 3)),
                     'Style Level:': [5, 5],  # SL list: 1st value is max SL, second is current SL
                     }
    return the_character
